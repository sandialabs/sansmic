name: Publish

on:
  push:
    tags:
      - v*.*.*

  workflow_dispatch:

permissions:
  contents: read

jobs:

  make_sdist:
    name: Make source distribution 📑 package 📦
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit
    - name: Setup | Checkout Code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0  # Optional, use if you use setuptools_scm
        submodules: true  # Optional, use if you have submodules
    - name: Action | Build SDist
      run: pipx run build --sdist
    - name: Action | Upload Artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: dist-cibw-sdist
        path: dist/*.tar.gz

  build_wheels:
    name: Build Python 🐍 wheel 📦 for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    steps:
      - name: Setup | Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - name: Setup | Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Action | Build Wheels
        uses: pypa/cibuildwheel@c923d83ad9c1bc00211c5041d0c3f73294ff88f6 # v2.21.0
      - name: Action | Upload Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dist-cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  # build_win_exe:
  #   name: Build standalone executable ⚙️ for Windows 🖥️
  #   runs-on: [windows-latest]
  #   continue-on-error: true
  #   steps:
  #     - name: Setup | Install python
  #       uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
  #       with:
  #         python-version: '3.12'

  #     - name: Setup | Checkout Code
  #       uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

  #     - name: Setup | Install Dependencies
  #       run: pip install -r requirements.txt -r requirements-exe.txt
  #     - run: pip install .
  #     - run: python setup.py build_ext -i

  #     - name: Setup | Get the sansmic version number
  #       id: vars
  #       run: |
  #         python -c "import sansmic; print('sansmic_version='+sansmic.__version__)" >> $Env:GITHUB_ENV
  #         echo "sha_short=$(git rev-parse --short HEAD)" >> $Env:GITHUB_ENV

  #     - name: Action | Run PyInstaller
  #       run: |
  #         pyinstaller --collect-all sansmic --collect-all click --hidden-import sansmic --hidden-import click --hidden-import pandas --hidden-import pybind11 --hidden-import numpy --hidden-import h5py --hidden-import pyyaml --hidden-import lasio -n sansmic --add-binary src/python/sansmic/libsansmic.cp312-win_amd64.pyd:sansmic src/python/sansmic/app.py

  #     - name: Action | Create examples
  #       run: mkdir dist/sansmic/examples
  #     - run: copy README.md dist/sansmic/README.md
  #     - run: copy LICENSE dist/sansmic/LICENSE.md
  #     - run: copy CHANGELOG.md dist/sansmic/CHANGELOG.md
  #     - run: copy AUTHORS.md dist/sansmic/AUTHORS.md
  #     - run: copy SECURITY.md dist/sansmic/SECURITY.md
  #     - run: sansmic-convert tests/baseline.dat dist/sansmic/examples/baseline.toml
  #     - run: Compress-Archive -Path dist/sansmic -DestinationPath dist/sansmic-${{github.ref_name}}-standalone-win_amd64.zip

  #     - name: Action | Upload Artifacts
  #       uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
  #       with:
  #         name: dist-exec-windows-latest
  #         path: ./dist/sansmic-*-standalone-win_amd64.zip

  publish-to-gh:
    name: Upload artifacts
    runs-on: ubuntu-latest
    needs:
      # - build_win_exe
      - make_sdist
      - build_wheels
    environment:
      name: release
      url: https://github.com/sandialabs/sansmic/releases/tag/${{github.ref_name}}
    concurrency: release

    permissions:
      id-token: write
      contents: write

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Setup | Checkout Repository at workflow sha
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        ref: ${{ github.sha }}

    - name: Setup | Download all the dists
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        pattern: dist-*
        path: dist
        merge-multiple: true

    - name: Action | Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@f7ad0af51a5648d09a20d00370f0a91c3bdf8f84 # v3.0.1
      with:
        inputs: >-
          ./dist/*.zip
          ./dist/*.tar.gz
          ./dist/*.whl

    - name: Publish | Upload to GitHub Release Assets
      run: |
        gh release upload ${{github.ref_name}} dist/*
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    runs-on: ubuntu-latest
    needs: [publish-to-gh]
    if: ${{ startsWith(github.ref, 'refs/tags/') && github.repository == 'sandialabs/sansmic' }}  # only publish to PyPI on tag pushes

    environment:
      name: testpypi
      url: https://test.pypi.org/p/sansmic

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Setup | Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Setup | Checkout Repository at workflow sha
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        ref: ${{ github.sha }}

    - name: Setup | Download all the dists
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        pattern: dist-cibw-*
        path: dist
        merge-multiple: true

    - name: Action | Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # release/v1
      with:
        skip-existing: true
        print-hash: true
        verbose: true
        attestations: true
        repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: ${{ startsWith(github.ref, 'refs/tags/') && github.repository == 'sandialabs/sansmic' }}  # only publish to PyPI on tag pushes
    needs: [publish-to-gh, publish-to-testpypi]
    environment:
      name: release
      url: https://pypi.org/p/sansmic
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
    - name: Setup | Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Setup | Checkout Repository at workflow sha
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        ref: ${{ github.sha }}

    - name: Setup | Download all the dists
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        pattern: dist-cibw-*
        path: dist
        merge-multiple: true

    - name: Setup | Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # release/v1
      with:
        attestations: true
        print-hash: true
